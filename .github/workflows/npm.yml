name: Publish Package

on:
  push:
    branches: [main]
    tags: ['v*.*.*']

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      deployments: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Build package
        run: npm run build

      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "NPM_PACKAGE_URL=https://www.npmjs.com/package/@galih1234/tvmaigraph" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish to npmjs
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish --access public
          
      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const deployment = await github.rest.repos.createDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.ref,
                environment: 'npmjs',
                description: `Published @galih1234/tvmaigraph@${process.env.PACKAGE_VERSION}`,
                auto_merge: false,
                required_contexts: []
              });

              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.data.id,
                state: 'success',
                environment_url: process.env.NPM_PACKAGE_URL,
                log_url: process.env.NPM_PACKAGE_URL,
                description: `Version ${process.env.PACKAGE_VERSION} published to npmjs`
              });
            } catch (error) {
              core.error('Deployment creation failed:');
              core.error(error);
              core.setFailed(error.message);
            }

      - name: Publish to GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
          echo "@galih1234:registry=https://npm.pkg.github.com" >> ~/.npmrc
          
          # Temporarily modify package.json
          cp package.json package.json.bak
          jq '.name = "@galih1234/tvmaigraph" | .publishConfig = {"registry":"https://npm.pkg.github.com"}' package.json > package.json.tmp
          mv package.json.tmp package.json
          
          npm publish --access public
          
          # Restore package.json
          mv package.json.bak package.json
